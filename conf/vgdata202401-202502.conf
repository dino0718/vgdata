input {
  file {
    path => "/home/dino/vgdata/data/*.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => plain { charset => "UTF-8" }
  }
}

filter {
  # 移除 CSV 檔案中的前 4 行（非數據行）
  if [message] =~ "交易日期" or [message] =~ "市　　場：" or [message] =~ "產　　品：" or [message] =~ "日　　期" {
    drop { }
  }

  # 解析 CSV
  csv {
    separator => ","
    skip_header => true
    autodetect_column_names => false
    columns => ["日期", "市場", "產品", "上價", "中價", "下價", "平均價(元/公斤)", "增減%", "交易量(公斤)", "增減%(額外)"]
  }

  # 清理數據
  mutate {
    strip => ["日期", "市場", "產品", "上價", "中價", "下價", "平均價(元/公斤)", "增減%", "交易量(公斤)", "增減%(額外)"]
    
    gsub => [
      "交易量(公斤)", ",", "",  # 移除數字中的千分位逗號
      "增減%", "[^0-9.-]", "",  # 移除 +、- 以外的非數字字元
      "增減%(額外)", "[^0-9.-]", ""  # 移除 +、- 以外的非數字字元
    ]

    convert => {
      "上價" => "float"
      "中價" => "float"
      "下價" => "float"
      "平均價(元/公斤)" => "float"
      "交易量(公斤)" => "integer"
      "增減%" => "float"
      "增減%(額外)" => "float"
    }
  }

  # 修正日期格式（114/01/01 → 2025-01-01）
  ruby {
    code => "
      require 'date'
      begin
        year, month, day = event.get('日期').split('/')
        new_year = 1911 + year.to_i  # 民國轉西元
        event.set('日期', Date.new(new_year, month.to_i, day.to_i).to_s)
      rescue
        event.tag('_dateparsefailure')
      end
    "
  }

  # 解析日期
  date {
    match => ["日期", "yyyy-MM-dd"]
    target => "@timestamp"
  }

  # 如果解析失敗，加上標籤以便 Debug
  if "_csvparsefailure" in [tags] {
    mutate { add_tag => ["CSV_PARSE_ERROR"] }
  }
}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "vgdata202401-202502"
    document_id => "%{日期}-%{市場}-%{產品}"
    user => "elastic"
    password => "dinoliu0718"
  }
  stdout { codec => rubydebug }
}

